#include <iostream>
using namespace std;
const int N = 1010;
int father[N];
int isRoot[N];
void init(){
    for(int i=1; i<N; i++){
        father[i]=i;
        isRoot[i]=0;
    }
    return;
}

int findFather(int x){
    int a=x;
    while(x!=father[x]){
        x=father[x];
    }
    while(a!=father[a]){
        int z=a;
        a=father[a];
        father[z]=x;
    }
    return x;
}

void Union(int a, int b){
    int faA = findFather(a);
    int faB = findFather(b);
    if(faA!=faB) father[faA] = faB;
    return;
}

int main(){  
    int n,m,a,b;
    while(1){
        cin >> n >> m;
        if(n==0) break;
        init();
        for(int i=0; i<m; i++){
            cin >> a >> b;
            Union(a,b);
        }
        for(int i=1; i<=n; i++){
            isRoot[findFather(i)] = 1;
        }
        int cnt = 0;
        for(int i=1; i<=n; i++){
            cnt+=isRoot[i];
        }
        if(cnt==1 && m == n-1) cout << "Yes" << endl;
        else cout << "No" << endl;
    } 
    return 0;
}